<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.test.goal.dao.MemberMapper">
	<!-- Member 쿼리 작성자 = 윤선영 -->
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="MemberVO">
		insert into Member values (#{userid}, #{password}, #{email}, #{tel1}, #{tel2}, #{tel3} <if test="image != null">, #{image}</if>)
	</insert>
	
	<!-- 로그인 -->
	<select id="login" parameterType="MemberVO" resultType="MemberVO">
		select * from Member where userid = #{userid}
		<if test="password != null">and password = #{password}</if> <!-- 동적쿼리(중복확인) --> 
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateMember" parameterType="MemberVO">
		update Member set userid = #{userid}, password = #{password}, email = #{email}, tel1 = #{tel1}, tel2 = #{tel2}, tel3 = #{tel3}
		<if test="image != null">, image = #{image}</if>
			where userid = #{userid} 	
	</update>
	
	<!-- ID/PWD 찾기 -->
	<select id="find" parameterType="string" resultType="MemberVO">
		select * from Member where email = #{email}
	</select>
	
	<!-- 회원목록 -->
	<select id="memberList" parameterType="MemberVO" resultType="MemberVO">
		select * from Member where userid = #{userid}
	</select>

	
	
<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
	
	
	<!-- 마인드 맵 관련 쿼리  작성자 = 강주영 -->
	
	<!-- BTMSection을 리스트로 반환한다  -->
	<select id = "findBTMSection" parameterType="int" resultType="BTMSectionVO">
		SELECT * FROM BTMSECTION WHERE SECTIONNUM = #{sectionNum}
	</select>
	
	<!-- BTMGoal을 리스트로 반환한다 -->
	<select id = "findBTMGoal" parameterType="int" resultType="BTMGoalVO">
		select * from BTMgoal where mgoalNum = #{mGoalNum}
	</select>
	
	<!-- 해당 MidGoal을 찾아온다 -->
	<select id = "findMidGoal" parameterType="int" resultType="MidGoalVO">
		select mGoalNum,mGoalTitle,mClear,to_char(mStartDate,'yyyymmddhh24MI') as mStartDate,to_char(mEndDate,'yyyymmddhh24MI') 
		as mEndDate,tGoalNum from MidGoal where mgoalNum = #{mGoalNum}
	</select>
	
	<!-- 현재 시간을 시분초까지 string으로 받아온다. -->
	<select id="findSysdate" resultType="string">
		select to_char(sysdate,'yyyymmddhh24MI') from dual
	</select>
	
	<!-- 해당 BTMGoal에 대한 BTMrecord을 가져오되 원하는 날짜 데이터 형식으로 바꿔서 가져온다. -->
	<select id ="findBtmRecord" parameterType="int" resultType="BTMRecordVO">
		select bRecordNum,to_char(startDate,'yyyymmddhh24MI') as startDate,to_char(endDate,'yyyymmddhh24MI') as endDate
		,memberId,btmSectionNum,bGoalNum,calendarNum from BTMRecord where bGoalNum = #{bGoalNum}
	</select>
	
	<!-- 해당 멤버의 현재 color를 반환한다. -->
	<select id = "sendMemberColor" parameterType = "FindMemberColor" resultType="String">
		 select color from memberList where progressNum = #{progressNum} and userId = #{memberId}
	</select>
	
	<!-- 해당 BTMRecord에 속하는 DayRecord를 리스트로 반환한다. -->
	<select id = "getDayRecordList" parameterType="int" resultType="DayRecordVO">
		select * from dayRecord where btmRecordNum = #{btmRecordNum}
	</select>
	
	<!-- BTMRecord를 insert하는 쿼리문 -->
	<insert id = "insertBTMRecord" parameterType="BTMRecordVO">
		INSERT INTO BTMRECORD values(#{bRecordNum},sysdate,sysdate+#{period},#{memberId},#{btmSectionNum},#{bGoalNum},#{calendarNum})
	</insert>
	
	<!-- 해당 맴버의 켈린더를 반환 -->
	<select id = "findCalendar" parameterType="String" resultType="CalendarVO">
	    SELECT * FROM Calendar WHERE MEMBERID = #{memberId}
	</select>
	
	<!-- btmGoal을 리스트로 반환 -->
	<select id = "findBtmGoal" parameterType="BTMGoalVO" resultType="BTMGoalVO">
		SELECT * FROM BTMGOAL WHERE BGOALNUM = ${bGoalNum}
	</select>
	
	<!-- BTMRecord의 시퀀스를 미리 dual을 통해 가져온다(insert 하기전 시퀀스 반환) -->
	<select id="findBTMRecordSEQ" resultType="int">
		SELECT BTMRECORD_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<!-- DayRecord를 insert 하는 쿼리 -->
	<insert id ="insertDayRecord" parameterType="insertDayRecord">
		insert into DayRecord values(DAYRECORD_SEQ.NEXTVAL,0,#{memberColor},to_date(#{startDate},'yyyy/mm/dd/hh24/mi'),null,'N',#{calendarNum},#{btmRecordNum})
	</insert>
	
	<!-- DayRecord를 insert하는 중 첫번째 날에 입력하는 쿼리(현재시간을 넣어줌) -->
	<insert id ="insertDayRecordFirstDay" parameterType="insertDayRecord">
		insert into DayRecord values(DAYRECORD_SEQ.NEXTVAL,0,#{memberColor},to_date(to_char(sysdate,'yyyy-mm-dd hh24:mi'),'yyyy/mm/dd/hh24/mi'),null,'Y',#{calendarNum},#{btmRecordNum})
	</insert>
	
	<!-- DayRecord를 리스트 형태로 반환 -->
	<select id = "findDayRecordList" parameterType="int" resultType="DayRecordVO">
		select * from DayRecord where btmRecordNum = #{bRecordNum}
	</select>
	
	<!-- 현재 DayRecord가 진행중인지 여부를 판단하는 쿼리 -->
	<select id = "isProgressing" parameterType="int" resultType="int">
		select count(DayRecordNum) from DayRecord where BTMRecordNum = #{btmRecordNum} and to_date(to_char(StartDate,'yyyy/mm/dd'),'yyyy/mm/dd') = to_date(to_char(sysdate,'yyyy/mm/dd'),'yyyy/mm/dd')
	</select>
	
	<!-- BTMRecord의 첫날의 시작시잔을 가져오는 쿼리 -->
	<select id = "getStartDate" parameterType="int" resultType="string">
		select to_char(startDate,'yyyy-mm-dd hh24:mi') from DayRecord where dayRecordNum = #{dayRecordNum}
	</select>
	
	<!-- DayRecord가 오늘 날짜인지 여부를 파악 -->
	<select id = "isStatusY" parameterType="int" resultType="int">
		select count(DayRecordNum) from DayRecord where status = 'Y'
	</select>
	
	<!-- 현재 시간을 다른 형태로 받아옴 -->
	<select id = "getSysdate" resultType="string">
		select to_char(sysdate,'yyyy-mm-dd hh24:mi') from dual
	</select>
	
	<!-- BTMRecord가 달성한 목표기록인지 여부를 판단하는 쿼리 -->
	<select id = "isSuccess" parameterType="int" resultType="int">
		select count(DayRecordNum) from DayRecord where btmRecordNum = #{bRecordNum} and completeTime is not null
	</select>
	
	<!-- 달성완료한 DayRecord를 리스트로 반환하는 쿼리 -->
	<select id ="getSuccessDayRecordList" parameterType="BTMRecordVO" resultType="DayRecordVO">
		select * from DayRecord where BTMRecordNum = #{bRecordNum} and 
		(startDate &gt;= to_date(#{startDate},'yyyy/mm/dd/hh24/mi/ss') and startDate &lt;= to_date(#{endDate},'yyyy/mm/dd/hh24/mi/ss')) 
	</select>
	
	<!-- 포메팅이 안된 btmRecord를 찾아오는 쿼리 -->
	<select id ="findBtmRecordNotFormatting" parameterType="int" resultType="BTMRecordVO">
		select * from BTMRecord where bGoalNum = #{bGoalNum}
	</select>
	
<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
	
</mapper>